(function(){var e={}.hasOwnProperty,t=function(t,n){function o(){this.constructor=t}for(var l in n)e.call(n,l)&&(t[l]=n[l]);return o.prototype=n.prototype,t.prototype=new o,t.__super__=n.prototype,t};describe("Test Knockout Bindings",function(){var e,n,o,l;return e=null,o=0,n=$("body"),l=function(t){return o++,null!=e&&e.remove(),n.append(e=$("<div id='application_"+o+"'></div>")),Falcon.apply(t,"#application_"+o)},describe("Test view binding",function(){var e,o,r,a,i,c,s,u,p,d,h,f;return s=ko.bindingHandlers.view,c=function(e){function n(){return d=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.url="#layout-template",n.prototype.observables={content_view:null,footer_view:null},n.prototype.initialize=function(){return this.content_view(new a),this.footer_view(new i)},n}(Falcon.View),r=$("			<template id='layout-template'>				<div data-bind='view: $view.content_view'>				</div>				<div data-bind='view: $view.footer_view'>				</div>			</template>		"),a=function(e){function n(){return h=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.url="#content-template",n}(Falcon.View),e=$("			<template id='content-template'>				The Content			</template>		"),i=function(e){function n(){return f=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.url="#footer-template",n}(Falcon.View),o=$("			<template id='footer-template'>				The Footer			</template>		"),u=p=null,before(function(){return n.append(r),n.append(o),n.append(e),u=sinon.spy(s,"init"),p=sinon.spy(s,"update")}),after(function(){return r.remove(),o.remove(),e.remove(),u.restore(),p.restore()}),it("Should call the view binding on initialization without an observable",function(){var e,t,n;return n=new a,e=sinon.spy(n,"_render"),t=sinon.spy(n,"_unrender"),expect(u).to.not.have.been.called,expect(p).to.not.have.been.called,expect(e).to.not.have.been.called,expect(t).to.not.have.been.called,l(n),expect(u).to.have.been.calledOnce,expect(p).to.have.been.calledOnce,expect(e).to.have.been.calledOnce,expect(t).to.not.have.been.called}),describe("Testing changes in views that are contained in observales",function(){var e,t,n,o,r,i,s,d,h,f,_,b,m,v,w,g;return g=new c,r=g.content_view(),b=g.footer_view(),m=ko.observable(null),v=sinon.spy(g,"_render"),w=sinon.spy(g,"_unrender"),i=sinon.spy(g,"display"),s=sinon.spy(g,"dispose"),n=sinon.spy(r,"_render"),o=sinon.spy(r,"_unrender"),e=sinon.spy(r,"display"),t=sinon.spy(r,"dispose"),f=sinon.spy(b,"_render"),_=sinon.spy(b,"_unrender"),d=sinon.spy(b,"display"),h=sinon.spy(b,"dispose"),beforeEach(function(){return u.reset(),p.reset(),v.reset(),n.reset(),f.reset(),i.reset(),e.reset(),d.reset(),w.reset(),o.reset(),_.reset(),s.reset(),t.reset(),h.reset()}),it("Should not call any render or unrender methods on unassigned observable",function(){return l(m),expect(u).to.have.been.calledOnce,expect(p).to.have.been.calledOnce,expect(v).to.not.have.been.called,expect(n).to.not.have.been.called,expect(f).to.not.have.been.called,expect(i).to.not.have.been.called,expect(e).to.not.have.been.called,expect(d).to.not.have.been.called,expect(w).to.not.have.been.called,expect(n).to.not.have.been.called,expect(_).to.not.have.been.called,expect(s).to.not.have.been.called,expect(t).to.not.have.been.called,expect(h).to.not.have.been.called}),it("Should call init, update, and render the correct number of times",function(){return m(g),expect(u).to.have.been.calledTwice,expect(p).to.have.been.calledThrice,expect(v).to.have.been.calledOnce,expect(n).to.have.been.calledOnce,expect(f).to.have.been.calledOnce,expect(i).to.have.been.calledOnce,expect(e).to.have.been.calledOnce,expect(d).to.have.been.calledOnce,expect(w).to.not.have.been.called,expect(o).to.not.have.been.called,expect(_).to.not.have.been.called,expect(s).to.not.have.been.called,expect(t).to.not.have.been.called,expect(h).to.not.have.been.called}),it("Should react to a child view being updated",function(){return g.content_view(new a),expect(u).to.not.have.been.called,expect(p).to.have.been.calledOnce,expect(v).to.not.have.been.called,expect(n).to.not.have.been.called,expect(f).to.not.have.been.called,expect(i).to.not.have.been.called,expect(e).to.not.have.been.called,expect(d).to.not.have.been.called,expect(w).to.not.have.been.called,expect(o).to.have.been.calledOnce,expect(_).to.not.have.been.called,expect(s).to.not.have.been.called,expect(t).to.have.been.calledOnce,expect(h).to.not.have.been.called}),it("Should react to the entire, root, view being updated",function(){return m(new a),expect(u).to.not.have.been.called,expect(p).to.have.been.calledOnce,expect(v).to.not.have.been.called,expect(n).to.not.have.been.called,expect(f).to.not.have.been.called,expect(i).to.not.have.been.called,expect(e).to.not.have.been.called,expect(d).to.not.have.been.called,expect(w).to.have.been.called,expect(o).to.not.have.been.called,expect(_).to.have.been.calledOnce,expect(s).to.have.been.calledOnce,expect(t).to.have.not.been.called,expect(h).to.have.been.calledOnce})})}),describe("Test updated foreach binding",function(){var o,r,a,i,c,s,u;return a=ko.bindingHandlers.foreach,i=c=null,r=function(e){function n(){return s=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.defaults={hello:"world"},n.prototype.observables={foo:"bar"},n}(Falcon.Model),o=function(e){function n(){return u=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.model=r,n}(Falcon.Collection),describe("Test flat bindings against arrays and collections",function(){var s,u,p,d,h,f,_,b,m,v,w;return f=function(e){function n(){return w=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.url="#layout-template",n.prototype.defaults={collection_list:function(){return new o},collection_list_options:function(){return new o}},n.prototype.observables={array_list:[],array_list_options:[]},n.prototype.afterAdd=function(){},n.prototype.beforeRemove=function(e){return e.remove()},n}(Falcon.View),h=$("				<template id='layout-template'>					<ul class='array_list' data-bind='foreach: $view.array_list'><li>An Item</li></ul>					<ul class='collection_list' data-bind='foreach: $view.collection_list'><li>An Item</li></ul>					<ul class='array_list_options' data-bind='foreach: {data: $view.array_list_options, afterAdd: $view.afterAdd, beforeRemove: $view.beforeRemove}'><li>An Item</li></ul>					<ul class='collection_list_options' data-bind='foreach: {data: $view.collection_list_options, afterAdd: $view.afterAdd, beforeRemove: $view.beforeRemove}'><li>An Item</li></ul>				</template>			"),m=null,v=ko.observable(),s=p=null,u=d=null,_=b=null,before(function(){return n.append(e),n.append(h),i=sinon.spy(a,"init"),c=sinon.spy(a,"update"),l(v)}),beforeEach(function(){var e;return m=new f,v(m),_=sinon.spy(m.viewModel(),"afterAdd"),b=sinon.spy(m.viewModel(),"beforeRemove"),e=s,s=$(".array_list"),p=$(".collection_list"),u=$(".array_list_options"),d=$(".collection_list_options")}),afterEach(function(){return e.empty(),i.reset(),c.reset(),_.restore(),b.restore()}),after(function(){return e.remove(),h.remove(),i.restore(),c.restore()}),it("Should properly list with an observable array",function(){return expect(i).to.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(i.callCount).to.equal(4),expect(c.callCount).to.equal(4),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0),i.reset(),c.reset(),m.array_list.push("Hello"),m.array_list.push("World","Foo Bar"),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(c.callCount).to.equal(2),expect(s.children().length).to.equal(3),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0),c.reset(),m.array_list.pop(),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(c.callCount).to.equal(1),expect(s.children().length).to.equal(2),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0)}),it("Should properly list with a collection",function(){return expect(i).to.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(i.callCount).to.equal(4),expect(c.callCount).to.equal(4),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0),i.reset(),c.reset(),m.collection_list.push(new r),m.collection_list.push([new r,new r]),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(c.callCount).to.equal(2),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(3),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0),c.reset(),m.collection_list.pop(),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(c.callCount).to.equal(1),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(2),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0)}),it("Should properly list with an observable array including options",function(){return expect(i).to.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(i.callCount).to.equal(4),expect(c.callCount).to.equal(4),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0),i.reset(),c.reset(),m.array_list_options.push("Hello2"),m.array_list_options.push("World2","Foo Bar2"),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.have.been.called,expect(b).to.not.have.been.called,expect(c.callCount).to.equal(2),expect(_.callCount).to.equal(3),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(3),expect(d.children().length).to.equal(0),c.reset(),_.reset(),m.array_list_options.pop(),m.array_list_options.pop(),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.have.been.called,expect(c.callCount).to.equal(2),expect(b.callCount).to.equal(2),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(1),expect(d.children().length).to.equal(0)}),it("Should properly list with a collection including options",function(){return expect(i).to.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.not.have.been.called,expect(i.callCount).to.equal(4),expect(c.callCount).to.equal(4),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(0),i.reset(),c.reset(),m.collection_list_options.push(new r),m.collection_list_options.push([new r,new r]),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.have.been.called,expect(b).to.not.have.been.called,expect(c.callCount).to.equal(2),expect(_.callCount).to.equal(3),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(3),c.reset(),_.reset(),m.collection_list_options.pop(),m.collection_list_options.pop(),expect(i).to.not.have.been.called,expect(c).to.have.been.called,expect(_).to.not.have.been.called,expect(b).to.have.been.called,expect(c.callCount).to.equal(2),expect(b.callCount).to.equal(2),expect(s.children().length).to.equal(0),expect(p.children().length).to.equal(0),expect(u.children().length).to.equal(0),expect(d.children().length).to.equal(1)})}),describe("Test observable bindings against collections",function(){var s,u,p,d,h,f,_,b;return p=function(e){function n(){return b=n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.url="#layout-template",n.prototype.defaults={collection_a1:function(){return new o},collection_a2:function(){return new o}},n.prototype.observables={selected_number:1,selected_collection:function(){return 1===this.selected_number()?this.collection_a1:this.collection_a2}},n}(Falcon.View),u=$("				<template id='layout-template'>					<ul class='collection_list' data-bind='foreach: $view.selected_collection'><li>An Item</li></ul>				</template>			"),f=null,_=ko.observable(),s=null,d=h=null,before(function(){return n.append(u),i=sinon.spy(a,"init"),c=sinon.spy(a,"update"),l(_)}),beforeEach(function(){return f=new p,_(f),s=$(".collection_list")}),afterEach(function(){return e.empty(),i.reset(),c.reset()}),after(function(){return e.remove(),u.remove(),i.restore(),c.restore()}),it("Should properly update if collection is switched to another with same update count",function(){return expect(i).to.have.been.called,expect(c).to.have.been.called,expect(i.callCount).to.equal(1),expect(c.callCount).to.equal(1),i.reset(),c.reset(),f.collection_a1.fill([new r,new r]),f.collection_a2.fill([new r,new r,new r,new r,new r]),expect(i).to.have.not.been.called,expect(c).to.have.been.called,expect(c.callCount).to.equal(1),expect(s.children().length).to.equal(2),i.reset(),c.reset(),f.selected_number(2),expect(i).to.have.not.been.called,expect(c).to.have.been.called,expect(c.callCount).to.equal(1),expect(s.children().length).to.equal(5),i.reset(),c.reset(),f.selected_number(1),expect(i).to.have.not.been.called,expect(c).to.have.been.called,expect(c.callCount).to.equal(1),expect(s.children().length).to.equal(2)})})}),describe("Test updated options binding",function(){}),describe("Test log binding",function(){})})}).call(this);